<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data noupdate="0">
        
        <!-- ============================================ -->
        <!-- SECTION TEMPLATES - CORE SECTIONS -->
        <!-- ============================================ -->
        
        <!-- Dimensions Section (Split into two - calculations and inputs) -->
        <record id="section_dimensions" model="greenhouse.section.template">
            <field name="name">Basic Dimensions</field>
            <field name="code">dimensions</field>
            <field name="sequence">5</field>
            <field name="icon">fa-ruler</field>
            <field name="color">1</field>
            <field name="is_mandatory">True</field>
            <field name="requires_pipe">False</field>
            <field name="input_fields">[]</field>
            <field name="calculation_rules">[
                {
                    "code": "span_length",
                    "name": "Effective Span Length",
                    "formula": "GET('total_span_length') - GET('width_front_span_coridoor', 0) - GET('width_back_span_coridoor', 0)",
                    "sequence": 10
                },
                {
                    "code": "bay_length",
                    "name": "Effective Bay Length", 
                    "formula": "GET('total_bay_length') - GET('width_front_bay_coridoor', 0) - GET('width_back_bay_coridoor', 0)",
                    "sequence": 20
                },
                {
                    "code": "structure_size",
                    "name": "Total Structure Size",
                    "formula": "(GET('span_length') + GET('width_front_span_coridoor', 0) + GET('width_back_span_coridoor', 0)) * (GET('bay_length') + GET('width_front_bay_coridoor', 0) + GET('width_back_bay_coridoor', 0))",
                    "sequence": 30
                },
                {
                    "code": "no_of_spans",
                    "name": "Number of Spans",
                    "formula": "INT(GET('bay_length') / GET('span_width')) if GET('span_width') > 0 else 0",
                    "sequence": 40
                },
                {
                    "code": "no_of_bays",
                    "name": "Number of Bays",
                    "formula": "INT(GET('span_length') / GET('bay_width')) if GET('bay_width') > 0 else 0",
                    "sequence": 50
                }
            ]</field>
        </record>
        
        <!-- Dimensions Input Section (Separate for input fields) -->
        <record id="section_dimensions_inputs" model="greenhouse.section.template">
            <field name="name">Basic Dimensions Inputs</field>
            <field name="code">dimensions_inputs</field>
            <field name="sequence">6</field>
            <field name="icon">fa-ruler</field>
            <field name="color">1</field>
            <field name="is_mandatory">True</field>
            <field name="requires_pipe">False</field>
            <field name="input_fields">[
                {
                    "code": "total_span_length",
                    "label": "Total Span Length (m)",
                    "type": "float",
                    "default": 100,
                    "min": 10,
                    "max": 500,
                    "sequence": 10,
                    "help": "Total length of the greenhouse in span direction"
                },
                {
                    "code": "total_bay_length",
                    "label": "Total Bay Length (m)",
                    "type": "float",
                    "default": 50,
                    "min": 10,
                    "max": 500,
                    "sequence": 20,
                    "help": "Total length of the greenhouse in bay direction"
                },
                {
                    "code": "span_width",
                    "label": "Span Width (m)",
                    "type": "float",
                    "default": 8,
                    "min": 4,
                    "max": 12.8,
                    "sequence": 30,
                    "help": "Width of each span"
                },
                {
                    "code": "bay_width",
                    "label": "Bay Width (m)",
                    "type": "float",
                    "default": 4,
                    "min": 3,
                    "max": 6,
                    "sequence": 40,
                    "help": "Width of each bay"
                },
                {
                    "code": "plot_size",
                    "label": "Plot Size",
                    "type": "text",
                    "default": "1 Acre",
                    "sequence": 50
                }
            ]</field>
            <field name="calculation_rules">[]</field>
        </record>

        <!-- Frame Section -->
        <record id="section_frame" model="greenhouse.section.template">
            <field name="name">Frame Components</field>
            <field name="code">frame</field>
            <field name="sequence">20</field>
            <field name="icon">fa-columns</field>
            <field name="color">3</field>
            <field name="is_mandatory">True</field>
            <field name="requires_pipe">True</field>
            <field name="input_fields">[
                {
                    "code": "column_height",
                    "label": "Column Height (m)",
                    "type": "float",
                    "default": 4.5,
                    "min": 2.0,
                    "max": 10.0,
                    "sequence": 10,
                    "help": "Height of the greenhouse columns"
                },
                {
                    "code": "top_ridge_height",
                    "label": "Top Ridge Height (m)",
                    "type": "float",
                    "default": 6.5,
                    "min": 3.0,
                    "max": 15.0,
                    "sequence": 20,
                    "help": "Total height at the ridge"
                },
                {
                    "code": "foundation_length",
                    "label": "Foundation Length (m)",
                    "type": "float",
                    "default": 0.5,
                    "min": 0,
                    "max": 2,
                    "sequence": 30,
                    "help": "Depth of foundation below ground"
                },
                {
                    "code": "no_column_big_frame",
                    "label": "Big Columns per Anchor Frame",
                    "type": "selection",
                    "options": ["0", "1", "2", "3"],
                    "default": "0",
                    "sequence": 40,
                    "help": "Number of additional columns in anchor frames"
                },
                {
                    "code": "no_anchor_frame_lines",
                    "label": "Number of Anchor Frame Lines",
                    "type": "integer",
                    "default": 0,
                    "min": 0,
                    "max": 10,
                    "sequence": 50,
                    "help": "Number of reinforced frame lines"
                },
                {
                    "code": "thick_column",
                    "label": "Thick Column Option",
                    "type": "selection",
                    "options": ["0", "1", "2", "3", "4"],
                    "default": "0",
                    "sequence": 60,
                    "help": "0=None, 1=4 Corners, 2=Bay Sides, 3=Span Sides, 4=All Sides"
                }
            ]</field>
            <field name="calculation_rules">[
                {
                    "code": "TOTAL_ANCHOR_FRAMES",
                    "name": "Total Anchor Frames",
                    "formula": "GET('no_anchor_frame_lines', 0) * GET('no_of_spans')",
                    "sequence": 10,
                    "length_per_unit": 0
                },
                {
                    "code": "TOTAL_NORMAL_FRAMES",
                    "name": "Total Normal Frames",
                    "formula": "(GET('no_of_spans') * (GET('no_of_bays') + 1)) - CALC('TOTAL_ANCHOR_FRAMES')",
                    "sequence": 20,
                    "length_per_unit": 0
                },
                {
                    "code": "MIDDLE_COLUMNS",
                    "name": "Middle Columns",
                    "formula": "CALC('TOTAL_ANCHOR_FRAMES') if INT(GET('no_column_big_frame')) in [1, 3] else 0",
                    "sequence": 30,
                    "length_per_unit": "GET('column_height') + GET('foundation_length')"
                },
                {
                    "code": "QUADRUPLE_COLUMNS",
                    "name": "Quadruple Columns",
                    "formula": "CALC('TOTAL_ANCHOR_FRAMES') * 2 if INT(GET('no_column_big_frame')) in [2, 3] else 0",
                    "sequence": 40,
                    "length_per_unit": "GET('column_height') + GET('foundation_length')"
                },
                {
                    "code": "THICK_COLUMNS",
                    "name": "Thick Columns",
                    "formula": "4 if GET('thick_column') == '1' else (GET('no_of_bays') + 1) * 2 if GET('thick_column') == '2' else (GET('no_of_spans') + 1) * 2 if GET('thick_column') == '3' else ((GET('no_of_bays') + 1) * 2) + ((GET('no_of_spans') + 1) * 2) if GET('thick_column') == '4' else 0",
                    "sequence": 50,
                    "length_per_unit": "GET('column_height') + GET('foundation_length')"
                },
                {
                    "code": "MAIN_COLUMNS",
                    "name": "Main Columns",
                    "formula": "((GET('no_of_spans') + 1) * (GET('no_of_bays') + 1)) - CALC('THICK_COLUMNS')",
                    "sequence": 60,
                    "length_per_unit": "GET('column_height') + GET('foundation_length')"
                }
            ]</field>
        </record>

        <!-- Truss Section -->
        <record id="section_truss" model="greenhouse.section.template">
            <field name="name">Truss Components</field>
            <field name="code">truss</field>
            <field name="sequence">30</field>
            <field name="icon">fa-sitemap</field>
            <field name="color">4</field>
            <field name="is_mandatory">True</field>
            <field name="requires_pipe">True</field>
            <field name="input_fields">[
                {
                    "code": "big_arch_length",
                    "label": "Big Arch Length (m)",
                    "type": "float",
                    "default": 8.5,
                    "min": 5,
                    "max": 15,
                    "sequence": 10,
                    "help": "Length of the main arch"
                },
                {
                    "code": "small_arch_length",
                    "label": "Small Arch Length (m)",
                    "type": "float",
                    "default": 6.5,
                    "min": 4,
                    "max": 12,
                    "sequence": 20,
                    "help": "Length of the secondary arch"
                },
                {
                    "code": "is_bottom_chord",
                    "label": "Bottom Chord Required?",
                    "type": "boolean",
                    "default": false,
                    "sequence": 30,
                    "help": "Add bottom chord for structural support"
                },
                {
                    "code": "v_support_bottom_chord_frame",
                    "label": "V Support per Frame",
                    "type": "selection",
                    "options": ["0", "2"],
                    "default": "0",
                    "sequence": 40,
                    "help": "Number of V supports per frame"
                },
                {
                    "code": "length_v_support_bottom_chord_frame",
                    "label": "V Support Length (m)",
                    "type": "float",
                    "default": 1.5,
                    "min": 0.5,
                    "max": 3,
                    "sequence": 50,
                    "help": "Length of V support members"
                },
                {
                    "code": "no_vent_big_arch_support_frame",
                    "label": "Vent Support Big Arch",
                    "type": "selection",
                    "options": ["0", "1", "2", "3"],
                    "default": "0",
                    "sequence": 60,
                    "help": "Vent supports on big arch"
                },
                {
                    "code": "length_vent_big_arch_support",
                    "label": "Big Arch Vent Support Length (m)",
                    "type": "float",
                    "default": 2.0,
                    "min": 0.5,
                    "max": 4,
                    "sequence": 70,
                    "help": "Length of vent support on big arch"
                },
                {
                    "code": "no_vent_small_arch_support_frame",
                    "label": "Vent Support Small Arch",
                    "type": "selection",
                    "options": ["0", "2"],
                    "default": "0",
                    "sequence": 80,
                    "help": "Vent supports on small arch"
                },
                {
                    "code": "length_vent_small_arch_support",
                    "label": "Small Arch Vent Support Length (m)",
                    "type": "float",
                    "default": 1.5,
                    "min": 0.5,
                    "max": 3,
                    "sequence": 90,
                    "help": "Length of vent support on small arch"
                },
                {
                    "code": "bay_side_border_purlin",
                    "label": "Bay Side Border Purlin",
                    "type": "selection",
                    "options": ["0", "1", "2"],
                    "default": "0",
                    "sequence": 100,
                    "help": "Number of purlins on bay sides"
                },
                {
                    "code": "span_side_border_purlin",
                    "label": "Span Side Border Purlin",
                    "type": "selection",
                    "options": ["0", "1", "2"],
                    "default": "0",
                    "sequence": 110,
                    "help": "Number of purlins on span sides"
                }
            ]</field>
            <field name="calculation_rules">[
                {
                    "code": "ARCH_BIG",
                    "name": "Big Arch",
                    "formula": "(GET('no_of_bays') + 1) * GET('no_of_spans')",
                    "sequence": 10,
                    "length_per_unit": "GET('big_arch_length')"
                },
                {
                    "code": "ARCH_SMALL",
                    "name": "Small Arch",
                    "formula": "CALC('ARCH_BIG')",
                    "sequence": 20,
                    "length_per_unit": "GET('small_arch_length')"
                }
            ]</field>
        </record>

        <!-- ASC Section -->
        <record id="section_asc" model="greenhouse.section.template">
            <field name="name">ASC (Aerodynamic Side Corridors)</field>
            <field name="code">asc</field>
            <field name="sequence">10</field>
            <field name="icon">fa-arrows-h</field>
            <field name="color">2</field>
            <field name="is_mandatory">False</field>
            <field name="requires_pipe">True</field>
            <field name="input_fields">[
                {
                    "code": "is_side_coridoors",
                    "label": "Enable ASC",
                    "type": "boolean",
                    "default": false,
                    "sequence": 10,
                    "help": "Enable aerodynamic side corridors"
                },
                {
                    "code": "width_front_span_coridoor",
                    "label": "Front Span ASC Width (m)",
                    "type": "float",
                    "default": 0,
                    "min": 0,
                    "max": 10,
                    "sequence": 20,
                    "help": "Width of front span corridor"
                },
                {
                    "code": "width_back_span_coridoor",
                    "label": "Back Span ASC Width (m)",
                    "type": "float",
                    "default": 0,
                    "min": 0,
                    "max": 10,
                    "sequence": 30,
                    "help": "Width of back span corridor"
                },
                {
                    "code": "width_front_bay_coridoor",
                    "label": "Left Bay ASC Width (m)",
                    "type": "float",
                    "default": 0,
                    "min": 0,
                    "max": 10,
                    "sequence": 40,
                    "help": "Width of left bay corridor"
                },
                {
                    "code": "width_back_bay_coridoor",
                    "label": "Right Bay ASC Width (m)",
                    "type": "float",
                    "default": 0,
                    "min": 0,
                    "max": 10,
                    "sequence": 50,
                    "help": "Width of right bay corridor"
                },
                {
                    "code": "support_hockeys",
                    "label": "Supports per Hockey",
                    "type": "integer",
                    "default": 0,
                    "min": 0,
                    "max": 10,
                    "sequence": 60,
                    "help": "Number of supports per hockey frame"
                },
                {
                    "code": "length_support_hockeys",
                    "label": "Hockey Support Length (m)",
                    "type": "float",
                    "default": 1.5,
                    "min": 0.5,
                    "max": 3,
                    "sequence": 70,
                    "help": "Length of hockey support members"
                }
            ]</field>
            <field name="calculation_rules">[
                {
                    "code": "FRONT_SPAN_HOCKEYS",
                    "name": "Front Span Hockeys",
                    "formula": "((GET('bay_length') / GET('span_width')) * (INT(GET('no_column_big_frame')) + 1) + 1) if GET('width_front_span_coridoor', 0) > 0 else 0",
                    "sequence": 10,
                    "length_per_unit": "GET('width_front_span_coridoor', 0)"
                },
                {
                    "code": "BACK_SPAN_HOCKEYS",
                    "name": "Back Span Hockeys",
                    "formula": "((GET('bay_length') / GET('span_width')) * (INT(GET('no_column_big_frame')) + 1) + 1) if GET('width_back_span_coridoor', 0) > 0 else 0",
                    "sequence": 20,
                    "length_per_unit": "GET('width_back_span_coridoor', 0)"
                }
            ]</field>
        </record>
        
        <!-- Side Screen Section -->
        <record id="section_side_screen" model="greenhouse.section.template">
            <field name="name">Side Screen Components</field>
            <field name="code">side_screen</field>
            <field name="sequence">40</field>
            <field name="icon">fa-shield</field>
            <field name="color">5</field>
            <field name="is_mandatory">False</field>
            <field name="requires_pipe">True</field>
            <field name="input_fields">[
                {
                    "code": "side_screen_guard",
                    "label": "Side Screen Guard",
                    "type": "boolean",
                    "default": false,
                    "sequence": 10,
                    "help": "Enable side screen guard"
                },
                {
                    "code": "length_side_screen_guard",
                    "label": "Screen Guard Length (m)",
                    "type": "float",
                    "default": 1.0,
                    "min": 0.5,
                    "max": 2,
                    "sequence": 20,
                    "help": "Length of screen guard members"
                },
                {
                    "code": "side_screen_guard_box",
                    "label": "Screen Guard Box",
                    "type": "boolean",
                    "default": false,
                    "sequence": 30,
                    "help": "Enable screen guard box"
                },
                {
                    "code": "no_side_screen_guard_box",
                    "label": "Number of Guard Boxes",
                    "type": "integer",
                    "default": 0,
                    "min": 0,
                    "max": 20,
                    "sequence": 40,
                    "help": "Number of screen guard boxes"
                },
                {
                    "code": "no_of_curtains",
                    "label": "Number of Curtains",
                    "type": "integer",
                    "default": 0,
                    "min": 0,
                    "max": 20,
                    "sequence": 50,
                    "help": "Total number of curtains"
                }
            ]</field>
            <field name="calculation_rules">[
                {
                    "code": "SIDE_SCREEN_ROLL_UP_PIPE",
                    "name": "Roll Up Pipe",
                    "formula": "CEIL((GET('bay_length') / 5.95) * 2) + CEIL((GET('span_length') / 5.95) * 2) if GET('side_screen_guard') or GET('side_screen_guard_box') else 0",
                    "sequence": 10,
                    "length_per_unit": 5.95
                }
            ]</field>
        </record>

        <!-- Lower Section -->
        <record id="section_lower" model="greenhouse.section.template">
            <field name="name">Lower Section Components</field>
            <field name="code">lower</field>
            <field name="sequence">50</field>
            <field name="icon">fa-level-down</field>
            <field name="color">6</field>
            <field name="is_mandatory">False</field>
            <field name="requires_pipe">True</field>
            <field name="input_fields">[
                {
                    "code": "front_back_c_c_cross_bracing_x",
                    "label": "Front/Back CC Cross Bracing",
                    "type": "boolean",
                    "default": false,
                    "sequence": 10,
                    "help": "Enable front and back cross bracing"
                },
                {
                    "code": "middle_c_c_cross_bracing_x",
                    "label": "Internal CC Cross Bracing Lines",
                    "type": "integer",
                    "default": 0,
                    "min": 0,
                    "max": 10,
                    "sequence": 20,
                    "help": "Number of internal cross bracing lines"
                },
                {
                    "code": "cross_bracing_column_arch",
                    "label": "Column to Arch Bracing",
                    "type": "boolean",
                    "default": false,
                    "sequence": 30,
                    "help": "Enable column to arch cross bracing"
                },
                {
                    "code": "cross_bracing_column_bottom",
                    "label": "Column to Bottom Bracing",
                    "type": "boolean",
                    "default": false,
                    "sequence": 40,
                    "help": "Enable column to bottom chord bracing"
                },
                {
                    "code": "arch_middle_purlin_big_arch",
                    "label": "Big Arch Middle Purlin",
                    "type": "selection",
                    "options": ["0", "1", "2", "3", "4", "5"],
                    "default": "0",
                    "sequence": 50,
                    "help": "0=None, 1=4 Corners, 2=Span Sides, 3=Bay Sides, 4=Perimeter, 5=All"
                },
                {
                    "code": "arch_middle_purlin_big_arch_pcs",
                    "label": "Big Arch Purlin Count",
                    "type": "selection",
                    "options": ["0", "1", "2"],
                    "default": "0",
                    "sequence": 60,
                    "help": "Number of middle purlins on big arch"
                },
                {
                    "code": "arch_middle_purlin_small_arch",
                    "label": "Small Arch Middle Purlin",
                    "type": "selection",
                    "options": ["0", "1", "2", "3", "4", "5"],
                    "default": "0",
                    "sequence": 70,
                    "help": "0=None, 1=4 Corners, 2=Span Sides, 3=Bay Sides, 4=Perimeter, 5=All"
                },
                {
                    "code": "arch_middle_purlin_small_arch_pcs",
                    "label": "Small Arch Purlin Count",
                    "type": "selection",
                    "options": ["0", "1", "2"],
                    "default": "0",
                    "sequence": 80,
                    "help": "Number of middle purlins on small arch"
                }
            ]</field>
            <field name="calculation_rules">[
                {
                    "code": "FRONT_BACK_CC_CROSS_BRACING_X",
                    "name": "Front/Back Cross Bracing",
                    "formula": "INT(GET('front_back_c_c_cross_bracing_x')) * (GET('no_of_spans') + 1) * 4",
                    "sequence": 10,
                    "length_per_unit": 2.5
                }
            ]</field>
        </record>
        
        <!-- Gutter Section -->
        <record id="section_gutter" model="greenhouse.section.template">
            <field name="name">Gutter System</field>
            <field name="code">gutter</field>
            <field name="sequence">60</field>
            <field name="icon">fa-tint</field>
            <field name="color">7</field>
            <field name="is_mandatory">False</field>
            <field name="requires_pipe">True</field>
            <field name="input_fields">[
                {
                    "code": "gutter_type",
                    "label": "Gutter Type",
                    "type": "selection",
                    "options": ["none", "ippf", "continuous"],
                    "default": "none",
                    "sequence": 10,
                    "help": "Type of gutter system"
                },
                {
                    "code": "gutter_slope",
                    "label": "Gutter Slope",
                    "type": "selection",
                    "options": ["1", "2"],
                    "default": "1",
                    "sequence": 20,
                    "help": "1=Single slope, 2=Double slope"
                },
                {
                    "code": "last_span_gutter",
                    "label": "Last Span Gutter",
                    "type": "boolean",
                    "default": false,
                    "sequence": 30,
                    "help": "Include gutter on last span"
                },
                {
                    "code": "gutter_ippf_full",
                    "label": "IPPF Full Gutter",
                    "type": "boolean",
                    "default": false,
                    "sequence": 40,
                    "help": "Use full IPPF gutter system"
                },
                {
                    "code": "gutter_ippf_drainage_extension",
                    "label": "IPPF Drainage Extension",
                    "type": "boolean",
                    "default": false,
                    "sequence": 50,
                    "help": "Add drainage extension to IPPF"
                },
                {
                    "code": "gutter_funnel_ippf",
                    "label": "IPPF Funnel",
                    "type": "boolean",
                    "default": false,
                    "sequence": 60,
                    "help": "Add funnel to IPPF system"
                },
                {
                    "code": "gutter_end_cap",
                    "label": "Gutter End Cap",
                    "type": "boolean",
                    "default": false,
                    "sequence": 70,
                    "help": "Add end caps to gutters"
                },
                {
                    "code": "gutter_extension",
                    "label": "Gutter Extension",
                    "type": "selection",
                    "options": ["0", "2", "4"],
                    "default": "0",
                    "sequence": 80,
                    "help": "Extension length for gutters"
                }
            ]</field>
            <field name="calculation_rules">[
                {
                    "code": "GUTTERS_CONTINUOUS",
                    "name": "Continuous Gutters",
                    "formula": "GET('no_of_spans') - 1 if GET('gutter_type') == 'continuous' else 0",
                    "sequence": 50,
                    "length_per_unit": "GET('span_length')"
                }
            ]</field>
        </record>
        
    </data>
</odoo>